# Generated by Django 3.2.7 on 2021-11-24 18:18

import comic.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_title', models.CharField(help_text='Required and unique', max_length=50, unique=True, verbose_name='Brand Name')),
                ('brand_slug', models.SlugField(help_text='Required and unique', unique=True, verbose_name='Brand Slug')),
                ('brand_to_feature', models.BooleanField(default=False)),
                ('brand_is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Comic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('main_image', models.ImageField(upload_to=comic.models.comic_images_directory_path)),
                ('other_image1', models.ImageField(blank=True, upload_to=comic.models.comic_images_directory_path)),
                ('other_image2', models.ImageField(blank=True, upload_to=comic.models.comic_images_directory_path)),
                ('detail', models.TextField(blank=True)),
                ('price', models.IntegerField()),
                ('published_date', models.DateField(blank=True)),
                ('year', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2021)])),
                ('page_count', models.IntegerField(blank=True)),
                ('age_rating', models.CharField(blank=True, choices=[('13+', '13+'), ('15+', '15+'), ('18+', '18+')], max_length=5)),
                ('in_stock', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Comic',
                'verbose_name_plural': 'Comics',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ComicType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comic_type_title', models.CharField(help_text='Required and unique', max_length=50, unique=True, verbose_name='Comic type Name')),
                ('comic_type_slug', models.SlugField(help_text='Required and unique', unique=True, verbose_name='Comic type Slug')),
                ('comic_type_to_feature', models.BooleanField(default=False)),
                ('comic_type_is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Comic Type',
                'verbose_name_plural': 'Comic Types',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_title', models.CharField(blank=True, max_length=50)),
                ('tag_slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Creator',
                'verbose_name_plural': 'Creators',
            },
        ),
        migrations.CreateModel(
            name='Annual',
            fields=[
                ('comic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comic.comic')),
            ],
            options={
                'verbose_name': 'Annual',
                'verbose_name_plural': 'Annual Issues',
            },
            bases=('comic.comic',),
        ),
        migrations.CreateModel(
            name='OneShot',
            fields=[
                ('comic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='comic.comic')),
            ],
            options={
                'verbose_name': 'One Shot',
                'verbose_name_plural': 'One Shot Issues',
            },
            bases=('comic.comic',),
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume_title', models.CharField(max_length=255, verbose_name='Volume Name')),
                ('volume_slug', models.SlugField(unique=True, verbose_name='Volume Slug')),
                ('volume_start', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2021)])),
                ('volume_end', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2021)])),
                ('to_feature', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comic.brand')),
            ],
            options={
                'verbose_name': 'Volume',
                'verbose_name_plural': 'Volumes',
            },
        ),
        migrations.AddField(
            model_name='comic',
            name='art_by',
            field=models.ManyToManyField(related_name='All_Artists', to='comic.Talent'),
        ),
        migrations.AddField(
            model_name='comic',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comic.brand'),
        ),
        migrations.AddField(
            model_name='comic',
            name='comic_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comic.comictype'),
        ),
        migrations.AddField(
            model_name='comic',
            name='tags',
            field=models.ManyToManyField(to='comic.Tag'),
        ),
        migrations.AddField(
            model_name='comic',
            name='volume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='comic.volume'),
        ),
        migrations.AddField(
            model_name='comic',
            name='wishlist_by',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comic',
            name='written_by',
            field=models.ManyToManyField(related_name='All_Writers', to='comic.Talent'),
        ),
    ]
